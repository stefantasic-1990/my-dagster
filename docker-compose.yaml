x-dagster-common-env: &common-env
  environment:
    DAGSTER_PG_USERNAME: "dagster_user"
    DAGSTER_PG_PASSWORD: "dagster_password"
    DAGSTER_PG_HOST: "dagster-postgres"
    DAGSTER_PG_DB: "dagster_database"

services:
  dagster-sftp:
    image: atmoz/sftp:latest
    platform: linux/amd64
    container_name: dagster-sftp
    volumes:
      - ./incoming/:/home/dagster-user/incoming/:ro
    command:
      - dagster_user:dagster_password:::incoming
    ports:
      - "2222:22"
    networks:
      - dagster-bridge-network

  dagster-mysql:
    image: mysql:8
    container_name: dagster-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: dagster_data
      MYSQL_USER: dagster_user
      MYSQL_PASSWORD: dagster_password
    volumes:
      - ./mysql-init.sh:/docker-entrypoint-initdb.d/mysql-init.sh
    ports:
      - "3306:3306"
    networks:
      - dagster-bridge-network

  dagster-postgres:
    image: postgres:11
    container_name: dagster-postgres
    environment:
      POSTGRES_USER: "dagster_user"
      POSTGRES_PASSWORD: "dagster_password"
      POSTGRES_DB: "dagster_database"
    ports:
      - "5432:5432"
    networks:
      - dagster-bridge-network

  dagster-code-location:
    build:
      context: .
      dockerfile: ./Dockerfile-dagster-code-location
    container_name: dagster-code-location
    image: dagster-code-location:latest
    restart: always
    networks:
      - dagster-bridge-network
    <<: *common-env

  dagster-webserver:
    build:
      context: .
      dockerfile: ./Dockerfile-dagster
    entrypoint:
      - dagster-webserver
      - -h
      - "0.0.0.0"
      - -p
      - "3000"
      - -w
      - workspace.yaml
    container_name: dagster-webserver
    expose:
      - "3000"
    ports:
      - "3000:3000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/io_manager_storage:/tmp/io_manager_storage
    networks:
      - dagster-bridge-network
    depends_on:
      - dagster-postgres
      - dagster-code-location
    <<: *common-env

  dagster-daemon:
    build:
      context: .
      dockerfile: ./Dockerfile-dagster
    entrypoint:
      - dagster-daemon
      - run
    container_name: dagster-daemon
    restart: on-failure
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/io_manager_storage:/tmp/io_manager_storage
    networks:
      - dagster-bridge-network
    depends_on:
      - dagster-postgres
      - dagster-code-location
    <<: *common-env

networks:
  dagster-bridge-network:
    driver: bridge
    name: dagster-bridge-network